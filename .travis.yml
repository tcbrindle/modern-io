language: cpp

sudo: false

# Do not build branches of the form "pr/*". By prefixing pull requests coming
# from branches inside the repository with pr/, this avoids building both the
# branch push _and_ the pull request.
# Based on https://github.com/boostorg/hana/blob/master/.travis.yml
branches:
  except: /pr\/.*/


# Build both debug and release configurations, through use of an environment variable in the build matrix.
matrix:
  include:
    - os: linux
      env: CONFIGURATION=Debug COMPILER=g++-5
      compiler: gcc
      addons: &gcc5
        apt:
          packages:
            - g++-5
          sources: &sources
            - ubuntu-toolchain-r-test
            #- llvm-toolchain-precise-3.6

    - os: linux
      env: CONFIGURATION=Release COMPILER=g++-5
      compiler: gcc
      addons: *gcc5

    - os: linux
      env: CONFIGURATION=Debug COMPILER=g++-6
      compiler: gcc
      addons: &gcc6
        apt:
          packages:
            - g++-6
          sources: *sources

    - os: linux
      env: CONFIGURATION=Release COMPILER=g++-6
      compiler: gcc
      addons: *gcc6

   # - os: linux
   #   env: CONFIGURATION=Debug COMPILER=clang++-3.6
   #   compiler: clang
   #   addons: &clang36
   #     apt:
   #       packages:
   #         - clang-3.6
   #         - g++-5
   #       sources: *sources

   # - os: linux
   #   env: CONFIGURATION=Release COMPILER=clang++-3.6
   #   compiler: clang
   #   addons: *clang36

    - os: osx
      env: CONFIGURATION=Debug COMPILER=clang++
      osx_image: xcode7.3

    - os: osx
      env: CONFIGURATION=Release COMPILER=clang++
      osx_image: xcode7.3

    - os: osx
      env: CONFIGURATION=Debug COMPILER=clang++
      osx_image: xcode7

    - os: osx
      env: CONFIGURATION=Release COMPILER=clang++
      osx_image: xcode7

    - os: osx
      env: CONFIGURATION=Debug COMPILER=g++-6
      osx_image: xcode7.3

    - os: osx
      env: CONFIGURATION=Release COMPILER=g++-6
      osx_image: xcode7.3


before_install:
  - set -e
  - |
    if [[ "${TRAVIS_OS_NAME}" == "osx" ]]; then
      brew update && brew install cmake;
      if [[ "${COMPILER}" == "g++-6" ]]; then
        brew install gcc
      fi
      if [[ "${DOCUMENTATION}"  == "true" ]]; then
        brew install doxygen
      fi
    fi

# CMake install taken from https://github.com/boostorg/hana/blob/master/.travis.yml
install:
  - |
    if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
      CMAKE_URL="https://cmake.org/files/v3.5/cmake-3.5.2-Linux-x86_64.tar.gz"
      mkdir cmake && travis_retry wget --no-check-certificate -O - ${CMAKE_URL} | tar --strip-components=1 -xz -C cmake
      export PATH=${TRAVIS_BUILD_DIR}/cmake/bin:${PATH}
    fi

# Run cmake to generate makefiles in 'builds' directory.
before_script:
  - cd $TRAVIS_BUILD_DIR
  - mkdir -p -v build
  - cd build
  - cmake -DCMAKE_BUILD_TYPE=$CONFIGURATION -DCMAKE_CXX_COMPILER=$COMPILER ..

# Run make in the directory containing generated makefiles.
script:
  - cmake --build .
  - ./test/test-modern-io

after_success:
  - |
    if [[ "${DOCUMENTATION}" == "true" ]]; then
      cmake --build . --target doc
      if [[ "${TRAVIS_PULL_REQUEST}" == "false" && "${TRAVIS_BRANCH}" == "master" ]]; then
        # Suppress output to avoid leaking the token when the command fails
        git clone https://tcbrindle:${GITHUB_TOKEN}@github.com/tcbrindle/modern-io --depth 1 --branch=gh-pages gh-pages &>/dev/null
        rm -rf gh-pages/{search,*.png,*.css,*.js,*.html}
        cp -R doc/html/* gh-pages/
        pushd gh-pages/
        git config --global user.name "Travis Bot"
        git config --global user.email "travis@travis-ci.org"
        git add --all .
        git commit --allow-empty -m "Update to ${TRAVIS_COMMIT:0:7}"
        # Suppress output to avoid leaking the token
        travis_retry git push origin gh-pages &>/dev/null
        popd
      fi
    fi

notifications:
  email: false
